# Configuração para PostgreSQL (Vercel Postgres)
# Substitui o SQLite em produção

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  isActive  Boolean  @default(true)
  limit     Int      @default(10)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  assignedLeads Lead[]    @relation("AssignedTo")
  leadLogs      LeadLog[]
  tasks         Task[]

  @@map("users")
}

model Lead {
  id            String   @id @default(cuid())
  name          String
  email         String?
  phone         String   @unique
  stage         String   @default("new")
  priority      String   @default("medium")
  interest      String?
  source        String   @default("whatsapp")
  notes         String?
  lastInteraction DateTime @default(now())
  assignedToId  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relacionamentos
  assignedTo User?     @relation("AssignedTo", fields: [assignedToId], references: [id])
  messages   Message[]
  leadLogs   LeadLog[]
  tasks      Task[]
  tags       Tag[]     @relation("LeadTags")

  @@map("leads")
}

model Message {
  id          String   @id @default(cuid())
  leadId      String
  text        String
  direction   String   // 'in' ou 'out'
  whatsappId  String?  // ID da mensagem no WhatsApp
  status      String   @default("sent") // sent, delivered, read, failed
  mediaUrl    String?  // URL de mídia (imagem, audio, etc.)
  createdAt   DateTime @default(now())

  // Relacionamentos
  lead Lead @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model LeadLog {
  id        String   @id @default(cuid())
  leadId    String
  userId    String?
  action    String
  details   String?
  createdAt DateTime @default(now())

  // Relacionamentos
  lead Lead  @relation(fields: [leadId], references: [id], onDelete: Cascade)
  user User? @relation(fields: [userId], references: [id])

  @@map("lead_logs")
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  completed   Boolean   @default(false)
  priority    String    @default("medium")
  leadId      String?
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relacionamentos
  lead Lead? @relation(fields: [leadId], references: [id], onDelete: SetNull)
  user User  @relation(fields: [userId], references: [id])

  @@map("tasks")
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  color String @default("#3B82F6")

  // Relacionamentos
  leads Lead[] @relation("LeadTags")

  @@map("tags")
}